openapi: 3.0.3
info: 
 title: OpenAPI Learning :) 
 description: |
 
   # About Us
    **sodales** ut _etiam_ sit `amet` nisl purus in mollis nunc sed id semper risus in hendrerit gravida rutrum quisque non tellus orci ac auctor augue mauris augue neque **gravida** in fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus pellentesque eu tincidunt tortor aliquam nulla facilisi cras `fermentum` odio
    
   # Categories
     nisi <u>*vitae suscipit tellus mauris*</u> a diam maecenas sed enim ut sem viverra aliquet eget sit <u>amet tellus</u> cras adipiscing
    - mobiles
      - apple 
      - samsumg
    - laptops
    - tvs 
    - headphones
    - desktop
    
    ```
     public void method()
     {
        System.out.println("Hello world");
     }
    
    ```
  
   ## category2 
    phasellus vestibulum lorem sed risus ultricies tristique nulla aliquet enim
    
   ### category3
    phasellus vestibulum lorem sed risus ultricies tristique nulla aliquet enim
    
     
 termsOfService: https://www.google.com   
 contact:
  name: Raj
  email: akks@gmail.com
  url: https://www.google.com   
 license: 
  name: name
  url: https://google.com
 version: 0.0.1
servers:
 - url: https://www.google.com
   description: my description
 - url: https://www.google.com
   description: my description
 - url: https://{username}.server.com:{port}/{version}
   variables: 
     username:
       default: demo       
       description: my description  
     port:
      enum:
       - "8443"
       - "443"
      default: "8443"  
      description: my description
     version: 
        default: v1  
        description: my version
   description: my description
tags: 
 - name: Categories
   description: Categories description
 - name: Products
   description: Product Description
 - name: Orders
   description: Order desscritions
   
paths: 
 /categories: 
   get: 
     tags: 
       - Categories
     summary: list of all the categoires
     description: returns the list of all categories
     deprecated: true
     operationId: getCategories
     responses: 
      '200':
        description:  a list of categoies 
        content: 
         application/json: 
          schema: 
           type: array
           items: 
             $ref: "#/components/schemas/Categories"
 /mycategories:
   post:
    summary: dhsfjhsf
    description : skhfskhfsd
    parameters: 
     - name: name
       in: query
       required: true  
       schema: 
         type: integer
         minimum: 10
         maximum: 100
       example: 11   
    responses: 
      '200':
        description: dkjfkdf
        content: 
         application/json:
          schema: 
           type: array
           uniqueItems: true 
           minItems: 2
           maxItems: 5
           items: 
            type: object
            properties: 
             myid:
              type: integer
             myname:
              type: string
             
 /myCategories2/{categoryID}:
  get:
    summary: my summary
    description : my description
    operationId: getMyCategories
    parameters: 
     - name: categoryID
       in: path
       required: true
       schema: 
         type: integer
         minimum: 10
         maximum: 100
       example: 11   
    responses: 
      '200':
        description: dkjfkdf
        content: 
         application/json:
          schema: 
           type: array
           minItems: 2
           maxItems: 5
           uniqueItems: true
           items: 
            type: object
            properties: 
             myid:
              type: integer
             myname:
              type: string
             
 /products:
  get:
    tags: 
       - Products
    summary: list of all products
    description : |
     **Lorem** Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with `desktop` publishing software like Aldus PageMaker including versions of Lorem Ipsum.
    operationId: getProducts 
    parameters: 
      - name: name
        in : query
        schema: 
         type: array
         items:
          type: string
        example: ["hello"] 
    responses: 
      '200':
        description: list of products
        content: 
         application/json:
          schema: 
           type: array
           items: 
            type: object
            properties: 
             productID:
              type: integer
             name:
              type: string
             price: 
              type: number
              format: double
             categoryName: 
               type: string
             quantity: 
               type: integer
               description: |
                 ***id volutpat*** lacus laoreet non curabitur gravida arcu ac tortor dignissim convallis `aenean` et tortor at risus viverra adipiscing at in tellus integer feugiat scelerisque <u>varius</u> morbi enim nunc faucibus
          examples:
           products-data:
             summary: product examples
             value: 
              - productId: 101
                name: Apple 11 pro
                price: 999.0
                categoryName: Mobiles
                quantity: 96
              - productId: 102
                name: Samsung s22 ultra
                price: 899.0
                categoryName: Mobiles
                quantity: 78
              - productId: 103
                name: Mac book pro M3
                price: 1999.0
                categoryName: Laptop
                quantity: 11    
 /orders:
  post:
   tags: 
       - Orders
   summary: create order
   description : |
      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
   operationId: getOrders
   responses: 
      '201':
        description:  order created !!
        content: 
         application/json: 
          schema: 
           type: object
           properties: 
             prouctId: 
              type: integer
              
      '500':
        $ref: "#/components/responses/InternalServerError"
        
   requestBody: 
    content: 
     application/json: 
      schema:
       type: object 
       properties: 
        product: 
          $ref: "#/components/schemas/Product"
        address: 
          $ref: "#/components/schemas/Address" 
            
  put: 
   summary : update order details
   description: update order details for processing and shipping
   operationId: updateOrders
   responses: 
    '201':
      description: updated order details
      # content: 
      # application/json: 
      #   schema: 
      #   type: object
      #   properties: 
      #     result: 
      #     type: string
    '500':
        $ref: "#/components/responses/InternalServerError"  
          
   requestBody: 
    content: 
     application/json: 
      schema: 
       type: object
       properties: 
        orderId: 
         type: integer
        product: 
         type: array 
         items: 
           $ref: "#/components/schemas/Products"
  delete: 
   summary : update order details
   description: update order details for processing and shipping
   operationId: deleteOrders
   parameters: 
      - $ref: "#/components/parameters/orderIdQueryParam"
   responses: 
    '204':
      description: delete the order 
    '500':
        $ref: "#/components/responses/InternalServerError"  
  get: 
   tags: 
    - Orders
   summary: get the order details 
   description: get the order details 
   operationId: getOrderDetails
   parameters: 
     - $ref: "#/components/parameters/orderIdQueryParam"
   responses: 
    '201': 
      description: get the order details
      content: 
       application/json:
        schema: 
         type: object
         properties: 
          orderId: 
           type: integer
          product: 
           type: array 
           items: 
            $ref: "#/components/schemas/Products"
      links: 
       GetOrderByOrderId: 
        $ref: "#/components/links/GetOrderByOrderId"
       
    '500':
        $ref: "#/components/responses/InternalServerError"   
        
 /orders/{orderId}:
   get: 
     tags: 
      - Orders
     summary: get the order details 
     description: get the order details 
     operationId: getOrderDetailsUsingPathParams
     deprecated: true
     parameters: 
       - $ref: "#/components/parameters/orderIdPathParam"
     responses: 
      '200': 
        description: get the order details
        content: 
         application/json:
          schema: 
           type: object
           properties: 
            orderId: 
             type: integer
            product: 
             type: array 
             items: 
              $ref: "#/components/schemas/Products"
      '500':
          $ref: "#/components/responses/InternalServerError"
 
 /oneOfOrder:
   post: 
    tags: 
     - Orders
    summary: my summary
    description: my descrition 
    operationId: getOneOfTheOrder
    requestBody:
     description: my description
     content: 
      application/json: 
       schema: 
        type: object
        properties: 
         product: 
          type: object 
          oneOf: 
           - $ref: "#/components/schemas/Mobile"
           - $ref: "#/components/schemas/Laptop"
         address: 
           $ref: "#/components/schemas/Address"
        required:
         - product
         - address
    responses:
     '200':
        description: my description
       
 /anyOfOrder:
   post: 
    tags: 
     - Orders
    summary: my summary
    description: my descrition 
    operationId: getAnyOfTheOrder
    parameters:
     - $ref: "#/components/parameters/orderIdQueryParam"
     - name: fetchType
       in : query
       required: true
       schema: 
        type: string
        enum: 
         - summary
         - details
         
    responses:
     '200':
        description: my description 
        content: 
         application/json: 
          schema: 
           type: object
           properties: 
            product: 
             type: object 
             anyOf: 
              - $ref: "#/components/schemas/OrderSummary"
              - $ref: "#/components/schemas/OrderDetails"
          
    
 /exampleObject: 
  get: 
   summary: my summary
   description: my description
   operationId: getExampleObject
   parameters: 
    - name: categoryID
      in: query
      schema: 
       type: integer
       minimum: 100
       maximum: 1000
      examples: 
       mobiles:
        value: 101
       laptops:
        value: 102
       headphones:
        value: 103
       televisions: 
        value: 104
   responses:
    '200':
     description: my description
     content: 
      application/json:
       schema: 
        type: array
        items:
         type: object
         properties: 
          para1:
           type: integer
          para2:
           type: integer
         required:
          - para1
          - para2  
       example: 
         para1: 1
         para2: 2
    '500':
        $ref: "#/components/responses/InternalServerError"     
         
 /exampleObject2: 
  get: 
   summary: my summary
   description: my description
   operationId: getExampleObject2
   parameters: 
    - name: categoryID
      in: query
      schema: 
       type: integer
       minimum: 100
       maximum: 1000
      examples: 
       mobiles:
        value: 101
       laptops:
        value: 102
       headphones:
        value: 103
       televisions: 
        value: 104
   responses:
    '200':
     description: my description
     content: 
      application/json:
       schema: 
        type: array
        uniqueItems: true
        items:
         type: object
         properties: 
          para1:
           type: integer
          para2:
           type: integer
       examples:   
         all-categories-data: 
          summary: Categories example data 
          value: 
           - categoryId: 101
             name: Mobiles
           - categoryId: 102
             name: Mobiles  
           - categoryId: 103
             name: Mobiles
           - categoryId: 104
             name: Mobiles 
         single-category-data: 
          summary: single category example data
          value: 
           - categoryId: 101
             name: Mobiles
    '500':
        $ref: "#/components/responses/InternalServerError"       
         
components: 
 parameters: 
   orderIdQueryParam:
      name : orderId
      in: query
      required: false
      schema: 
       type: integer
 
   orderIdPathParam:
      name : orderId
      in: path
      required: true
      schema: 
       type: integer       
 schemas:
   Address: 
     type: object
     minProperties: 2
     maxProperties: 8
     properties:
       addressLine: 
        type: string
        readOnly: true
       city: 
        type: string
        writeOnly: true
       state: 
        type: string
       zipcode: 
        type: string 
     required: [addressLine,city,state,zipcode]  
     
   Product: 
       type: array
       uniqueItems: true
       items: 
        type: object
        minProperties: 2
        maxProperties: 8
        properties:
         productID: 
          type: integer
         name: 
          type: string
         quantity:
          type: integer
          format: int32
          
   Products: 
      type: object
      properties: 
       productId:
        type: integer
       name: 
        type: string
       price: 
        type: integer
       categoryName: 
        type: string
       isOfficeAddress:
        type: boolean
        nullable: true
       date: 
        type: string
        format: date-time
        nullable : true
        
   Categories: 
      type: object
      properties: 
       categoryid: 
        type: integer
       name: 
        type: string
       city:
        type: string
       address: 
        type: string
   Mobile: 
    allOf: 
     - $ref: "#/components/schemas/Products"
   Laptop: 
    allOf: 
     - $ref: "#/components/schemas/Products"
     - type: object
       properties: 
        para1: 
         type: integer
        para2:
         type: string
         enum: 
          - val1
          - val2 
   OrderSummary: 
      type: object
      properties: 
        summaryId: 
         type: integer
        name: 
          type: string 
   OrderDetails:  
      type: object
      properties: 
        detailId: 
         type: integer
        name: 
          type: string 
 responses: 
  InternalServerError: 
   description: error occurred while processing the request
 links: 
   GetOrderByOrderId: 
    description: > 
      The `orderId` value retured in the response can be used as input paramaters in `GET/orders`.
    operationId: getProductDetails
    parameters: 
     orderId: '$response.body#/orderId'
     
   
        
   
  
        
               
         
         
       
           

         
          
       
    
      
     
      
          
   
   
  
       
             
              
                        
             

  
             
           
           
          
          
      
  
     
    
 
   
 