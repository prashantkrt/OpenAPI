openapi: 3.0.3
info: 
 title: OpenAPI Learning :) 
 description: |
   tvero eos et accusamus et iusto odio dignissimos ducimus qui blanditiis praesentium voluptatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi, id est laborum et dolorum fuga. Et harum quidem rerum facilis est et expedita distinctio. Nam libero tempore, cum soluta nobis est eligendi optio cumque nihil impedit quo minus id quod maxime placeat facere possimus, omnis voluptas assumenda est, omnis dolor repellendus. Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe eveniet ut et voluptates repudiandae sint et molestiae non recusandae. Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis voluptatibus maiores alias consequatur aut perferendis doloribus asperiores repellat
 termsOfService: https://www.google.com   
 contact:
  name: Raj
  email: akks@gmail.com
  url: https://www.google.com   
 license: 
  name: name
  url: https://google.com
 version: 0.0.1
servers:
 - url: https://www.google.com
   description: my description
 - url: https://www.google.com
   description: my description
 - url: https://{username}.server.com:{port}/{version}
   variables: 
     username:
       default: demo       
       description: my description  
     port:
      enum:
       - "8443"
       - "443"
      default: "8443"  
      description: my description
     version: 
        default: v1  
        description: my version
   description: my description
paths: 
 /categories: 
   get: 
     summary: list of all the categoires
     description: returns the list of all categories
     responses: 
      '200':
        description:  a list of categoies 
        content: 
         application/json: 
          schema: 
           type: array
           items: 
            type: object
            properties: 
             categoryid: 
              type: integer
             name: 
              type: string
             city:
              type: string
             address: 
              type: string
              
 /mycategories:
   post:
    summary: dhsfjhsf
    description : skhfskhfsd
    parameters: 
     - name: name
       in: query
       required: true  
       schema: 
         type: integer
         minimum: 10
         maximum: 100
       example: 11   
    responses: 
      '200':
        description: dkjfkdf
        content: 
         application/json:
          schema: 
           type: array
           items: 
            type: object
            properties: 
             myid:
              type: integer
             myname:
              type: string
             
 /myCategories2/{categoryID}:
  get:
    summary: my summary
    description : my description
    parameters: 
     - name: categoryID
       in: path
       required: true
       schema: 
         type: integer
         minimum: 10
         maximum: 100
       example: 11   
    responses: 
      '200':
        description: dkjfkdf
        content: 
         application/json:
          schema: 
           type: array
           items: 
            type: object
            properties: 
             myid:
              type: integer
             myname:
              type: string
             
 /products:
  get:
    summary: list of all products
    description : |
     Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
    parameters: 
      - name: name
        in : query
        schema: 
         type: array
         items:
          type: string
        example: ["hello"] 
    responses: 
      '200':
        description: list of products
        content: 
         application/json:
          schema: 
           type: array
           items: 
            type: object
            properties: 
             productID:
              type: integer
             name:
              type: string
             price: 
              type: number
              format: double
             categoryName: 
               type: string
             quantity: 
               type: integer

 /orders:
  post:
   summary: create order
   description : |
     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
   responses: 
      '201':
        description:  order created !!
        content: 
         application/json: 
          schema: 
           type: object
           properties: 
             prouctId: 
              type: integer
   requestBody: 
    content: 
     application/json: 
      schema:
       type: object 
       properties: 
        product: 
         type: array
         items: 
          type: object
          properties:
           productID: 
            type: integer
           name: 
            type: string
           quantity:
            type: integer
            format: int32
        address: 
          type: object 
          properties:
           addressLine: 
            type: string
           city: 
            type: string
           state: 
            type: string
           zipcode: 
            type: string      
            
  put: 
   summary : update order details
   description: update order details for processing and shipping
   
   responses: 
    '201':
      description: updated order details
      # content: 
      # application/json: 
      #   schema: 
      #   type: object
      #   properties: 
      #     result: 
      #     type: string
          
   requestBody: 
    content: 
     application/json: 
      schema: 
       type: object
       properties: 
        orderId: 
         type: integer
        product: 
         type: array 
         items: 
          type: object
          properties: 
           productId:
            type: integer
           name: 
            type: string
           price: 
            type: integer
           categoryName: 
            type: string
  delete: 
   summary : update order details
   description: update order details for processing and shipping
   parameters: 
       - name: orderId
         in: query
         required: true  
         schema: 
           type: string
         example: order12   
   responses: 
    '200':
      description: delete the order 
     
      
          
   
   
  
       
             
              
                        
             

  
             
           
           
          
          
      
  
     
    
 
   
 