openapi: 3.0.3
info: 
 title: OpenAPI Learning :) 
 description: |
 
   # About Us
    **sodales** ut _etiam_ sit `amet` nisl purus in mollis nunc sed id semper risus in hendrerit gravida rutrum quisque non tellus orci ac auctor augue mauris augue neque **gravida** in fermentum et sollicitudin ac orci phasellus egestas tellus rutrum tellus pellentesque eu tincidunt tortor aliquam nulla facilisi cras `fermentum` odio
    
   # Categories
     nisi <u>*vitae suscipit tellus mauris*</u> a diam maecenas sed enim ut sem viverra aliquet eget sit <u>amet tellus</u> cras adipiscing
    - mobiles
      - apple 
      - samsumg
    - laptops
    - tvs 
    - headphones
    - desktop
    
    ```
     public void method()
     {
        System.out.println("Hello world");
     }
    
    ```
  
   ## category2 
    phasellus vestibulum lorem sed risus ultricies tristique nulla aliquet enim
    
   ### category3
    phasellus vestibulum lorem sed risus ultricies tristique nulla aliquet enim
    
     
 termsOfService: https://www.google.com   
 contact:
  name: Raj
  email: akks@gmail.com
  url: https://www.google.com   
 license: 
  name: name
  url: https://google.com
 version: 0.0.1
servers:
 - url: https://www.google.com
   description: my description
 - url: https://www.google.com
   description: my description
 - url: https://{username}.server.com:{port}/{version}
   variables: 
     username:
       default: demo       
       description: my description  
     port:
      enum:
       - "8443"
       - "443"
      default: "8443"  
      description: my description
     version: 
        default: v1  
        description: my version
   description: my description
paths:            
 /products:
  get:
    summary: list of all products
    description : |
     **Lorem** Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with `desktop` publishing software like Aldus PageMaker including versions of Lorem Ipsum.
    parameters: 
      - name: name
        in : query
        schema: 
         type: array
         items:
          type: string
        example: ["hello"] 
    responses: 
      '200':
        description: list of products
        content: 
         application/json:
          schema: 
           type: array
           items: 
            type: object
            properties: 
             productID:
              type: integer
             name:
              type: string
             price: 
              type: number
              format: double
             categoryName: 
               type: string
             quantity: 
               type: integer
               description: |
                 ***id volutpat*** lacus laoreet non curabitur gravida arcu ac tortor dignissim convallis `aenean` et tortor at risus viverra adipiscing at in tellus integer feugiat scelerisque <u>varius</u> morbi enim nunc faucibus
          examples:
           products-data:
             summary: product examples
             value: 
              - productId: 101
                name: Apple 11 pro
                price: 999.0
                categoryName: Mobiles
                quantity: 96
              - productId: 102
                name: Samsung s22 ultra
                price: 899.0
                categoryName: Mobiles
                quantity: 78
              - productId: 103
                name: Mac book pro M3
                price: 1999.0
                categoryName: Laptop
                quantity: 11    
 /orders:
  post:
   summary: create order
   description : |
     Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
   responses: 
      '201':
        description:  order created !!
        content: 
         application/json: 
          schema: 
           type: object
           properties: 
             prouctId: 
              type: integer
   requestBody: 
    content: 
     application/json: 
      schema:
       type: object 
       properties: 
        product: 
         type: array
         items: 
          type: object
          properties:
           productID: 
            type: integer
           name: 
            type: string
           quantity:
            type: integer
            format: int32
        address: 
          type: object 
          properties:
           addressLine: 
            type: string
           city: 
            type: string
           state: 
            type: string
           zipcode: 
            type: string      
            
  put: 
   summary : update order details
   description: update order details for processing and shipping
   
   responses: 
    '201':
      description: updated order details
      # content: 
      # application/json: 
      #   schema: 
      #   type: object
      #   properties: 
      #     result: 
      #     type: string
          
   requestBody: 
    content: 
     application/json: 
      schema: 
       type: object
       properties: 
        orderId: 
         type: integer
        product: 
         type: array 
         items: 
          type: object
          properties: 
           productId:
            type: integer
           name: 
            type: string
           price: 
            type: integer
           categoryName: 
            type: string
  delete: 
   summary : update order details
   description: update order details for processing and shipping
   parameters: 
       - name: orderId
         in: query
         required: true  
         schema: 
           type: string
         example: order12   
   responses: 
    '204':
      description: delete the order 
  get: 
   summary: get the order details 
   description: get the order details 
   parameters: 
    - name : orderId
      in: query
      required: false
      schema: 
       type: integer
   responses: 
    '200': 
      description: get the order details
      content: 
       application/json:
        schema: 
         type: object
         properties: 
          orderId: 
           type: integer
          product: 
           type: array 
           items: 
            type: object
            properties: 
             productId:
              type: integer
             name: 
              type: string
             price: 
              type: integer
             categoryName: 
              type: integer
              
 /exampleObject: 
  get: 
   summary: my summary
   description: my description
   parameters: 
    - name: categoryID
      in: query
      schema: 
       type: integer
       minimum: 100
       maximum: 1000
      examples: 
       mobiles:
        value: 101
       laptops:
        value: 102
       headphones:
        value: 103
       televisions: 
        value: 104
   responses:
    '200':
     description: my description
     content: 
      application/json:
       schema: 
        type: array
        items:
         type: object
         properties: 
          para1:
           type: integer
          para2:
           type: integer
       example: 
         para1: 1
         para2: 2
         
 /exampleObject2: 
  get: 
   summary: my summary
   description: my description
   parameters: 
    - name: categoryID
      in: query
      schema: 
       type: integer
       minimum: 100
       maximum: 1000
      examples: 
       mobiles:
        value: 101
       laptops:
        value: 102
       headphones:
        value: 103
       televisions: 
        value: 104
   responses:
    '200':
     description: my description
     content: 
      application/json:
       schema: 
        type: array
        items:
         type: object
         properties: 
          para1:
           type: integer
          para2:
           type: integer
       examples:   
         all-categories-data: 
          summary: Categories example data 
          value: 
           - categoryId: 101
             name: Mobiles
           - categoryId: 102
             name: Mobiles  
           - categoryId: 103
             name: Mobiles
           - categoryId: 104
             name: Mobiles 
         single-category-data: 
          summary: single category example data
          value: 
           - categoryId: 101
             name: Mobiles
         
             
        
               
         
         
       
           

         
          
       
    
      
     
      
          
   
   
  
       
             
              
                        
             

  
             
           
           
          
          
      
  
     
    
 
   
 